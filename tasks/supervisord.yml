---
- name: Configure supervisor
  become: "{{ ansible_user_id != 'root' }}"
  when: xvfb_service_enabled
  block:

    - name: Ensure necessary directories exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - /etc/profile.d
        - /etc/supervisor
        - /var/log/supervisor
        - /var/run

    - name: Ensures Xvfb profile is created
      ansible.builtin.template:
        dest: /etc/profile.d/10-xvfb.sh
        mode: "0644"
        src: profile-d-xvfb.j2

    - name: Check for supervisor configuration files
      ansible.builtin.stat:
        path: "{{ item }}"
      loop:
        - /etc/supervisord.conf
        - /etc/supervisor/supervisord.conf
      register: supervisor_conf_files

    - name: Create supervisor configuration file
      ansible.builtin.template:
        src: supervisord-xvfb.conf.j2
        dest: /etc/supervisor/supervisord.conf
        mode: "0644"
      notify: Xvfb service is started
      when: supervisor_conf_files.results | map(attribute='stat.exists') | select | list | length == 0

    - name: Check for supervisor configuration files
      ansible.builtin.stat:
        path: "{{ item }}"
      loop:
        - /etc/supervisord.conf
        - /etc/supervisor/supervisord.conf
      register: supervisor_conf_files

    - name: Sets the current supervisor configuration file fact
      ansible.builtin.set_fact:
        supervisor_conf_file: >-
          {{ supervisor_conf_files.results | selectattr('stat.exists') | map(attribute='item') | first }}

    - name: Read content of supervisor configuration file
      ansible.builtin.slurp:
        src: "{{ supervisor_conf_file }}"
      no_log: true
      register: supervisor_conf_content

    - name: Read include.files and pidfile from supervisor configuration file
      ansible.builtin.set_fact:
        supervisor_include_files: |
          {{ ((supervisor_conf_content.content | b64decode | community.general.from_ini)['include'])['files']
          | default('/etc/supervisor/conf.d') | trim }}
        supervisor_supervisord_pidfile: |
          {{ ((supervisor_conf_content.content | b64decode | community.general.from_ini)['supervisord'])['pidfile']
          | default('') | trim }}

    - name: Read include's dir and extension from supervisor configuration file
      ansible.builtin.set_fact:
        supervisor_include_files_dir: >-
          {{ (supervisor_include_files.split('/')[:-1] | join('/'))
          if (supervisor_include_files is defined) else '/etc/supervisor/conf.d' | trim }}
        supervisor_include_files_ext: >-
          {{ supervisor_include_files.split('.')[-1]
          if (supervisor_include_files is defined and '.' in supervisor_include_files) else 'conf' | trim }}

    - name: Ensure necessary supervisor directories exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - "{{ supervisor_include_files_dir }}"

    - name: Create Xvfb supervisor program configuration
      ansible.builtin.template:
        src: supervisord-xvfb-program.conf.j2
        dest: "{{ supervisor_include_files_dir }}/xvfb.{{ supervisor_include_files_ext | trim }}"
        mode: "0644"

    - name: Check if supervisord is running
      # noqa: command-instead-of-module - supervisorctl doesn't support checking for pid.
      ansible.builtin.command: supervisorctl pid
      changed_when: false
      failed_when: supervisord_status.rc not in [0, 7]
      register: supervisord_status

    - name: Start supervisord daemon
      ansible.builtin.command: supervisord -c "{{ supervisor_conf_file }}"
      args:
        creates: "{{ supervisor_supervisord_pidfile | default('/var/run/supervisord.sock') }}"
      when: supervisord_status.rc == 7
