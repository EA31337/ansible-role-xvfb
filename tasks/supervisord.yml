---
- name: Configure supervisor
  become: "{{ ansible_user_id != 'root' }}"
  when: xvfb_service_enabled
  block:

    - name: Ensure necessary directories exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - /etc/profile.d
        - /etc/supervisor
        - /var/log/supervisor
        - /var/run

    - name: Ensures Xvfb profile is created
      ansible.builtin.template:
        dest: /etc/profile.d/10-xvfb.sh
        mode: "0644"
        src: profile-d-xvfb.j2

    - name: Check for supervisord configuration files
      ansible.builtin.stat:
        path: "{{ item }}"
      loop:
        - /etc/supervisord.conf
        - /etc/supervisor/supervisord.conf
      register: supervisor_conf_files

    - name: Sets the current supervisord configuration file fact
      ansible.builtin.set_fact:
        supervisor_conf_file: >-
          {{ supervisor_conf_files.results
            | selectattr('stat.exists')
            | map(attribute='item')
            | first
            | default('/etc/supervisor/supervisord.conf', true)
            | trim }}

    - name: Create supervisord configuration file
      ansible.builtin.template:
        src: supervisord-{{ ansible_os_family }}.conf.j2
        dest: "{{ supervisor_conf_file }}"
        mode: "0644"
      notify:
        - All services are present
        - Restart Xvfb service
      when: supervisor_conf_files.results | map(attribute='stat.exists') | select | list | length == 0

    - name: Read supervisor configuration file content
      ansible.builtin.slurp:
        path: "{{ supervisor_conf_file }}"
      register: supervisor_conf_content

    - name: Set include.files and pidfile facts with robust regex handling
      ansible.builtin.set_fact:
        supervisor_include_files: >-
              {% raw %}
              {% set include_match = supervisor_conf_content.content | b64decode |
              regex_findall('\[include\].*?files\s*=\s*([^\n\r]*)', multiline=True) %}
              {% if include_match %}
              {{ include_match[0] | trim }}
              {% else %}
              /etc/supervisor/conf.d
              {% endif %}
              {% endraw %}
        supervisor_supervisord_pidfile: >-
              {% raw %}
              {% set pidfile_match = supervisor_conf_content.content | b64decode |
              regex_findall('\[supervisord\].*?pidfile\s*=\s*([^\n\r]*)', multiline=True) %}
              {% if pidfile_match %}
              {{ pidfile_match[0] | trim }}
              {% else %}
              {% endif %}
              {% endraw %}
    - name: Read include's dir and extension from supervisor configuration file
      ansible.builtin.set_fact:
        supervisor_include_files_dir: >-
          {% raw %}
          {% set path = supervisor_include_files | default('/etc/supervisor/conf.d') | trim %}
          {% if '/' in path %}
          {{ path.split('/')[:-1] | join('/') }}
          {% else %}
          /etc/supervisor/conf.d
          {% endif %}
          {% endraw %}
        supervisor_include_files_ext: >-
          {% raw %}
          {% set path = supervisor_include_files | default('/etc/supervisor/conf.d') | trim %}
          {% if '*.' in path %}
          {{ path.split('*.')[1] }}
          {% elif '.' in path.split('/')[-1] %}
          {{ path.split('/')[-1].split('.')[-1] }}
          {% else %}
          conf
          {% endif %}
          {% endraw %}
    - name: Ensure necessary supervisor directories exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - "{{ supervisor_include_files_dir }}"

    - name: Create Xvfb supervisor program configuration
      ansible.builtin.template:
        src: supervisord-xvfb-program.conf.j2
        dest: "{{ supervisor_include_files_dir }}/xvfb.{{ supervisor_include_files_ext | trim }}"
        mode: "0644"

    - name: Check if supervisord is running
      # noqa: command-instead-of-module - supervisorctl doesn't support checking for pid.
      ansible.builtin.command: supervisorctl pid
      changed_when: false
      failed_when: supervisord_status.rc not in [0, 7]
      register: supervisord_status

    - name: Start supervisord daemon
      ansible.builtin.command: supervisord -c "{{ supervisor_conf_file }}"
      args:
        creates: "{{ supervisor_supervisord_pidfile | default('/var/run/supervisord.sock', true) }}"
      when: supervisord_status.rc == 7
